/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Spot as PrismaSpot } from "@prisma/client";

export class SpotServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SpotCountArgs, "select">): Promise<number> {
    return this.prisma.spot.count(args);
  }

  async spots(args: Prisma.SpotFindManyArgs): Promise<PrismaSpot[]> {
    return this.prisma.spot.findMany(args);
  }
  async spot(args: Prisma.SpotFindUniqueArgs): Promise<PrismaSpot | null> {
    return this.prisma.spot.findUnique(args);
  }
  async createSpot(args: Prisma.SpotCreateArgs): Promise<PrismaSpot> {
    return this.prisma.spot.create(args);
  }
  async updateSpot(args: Prisma.SpotUpdateArgs): Promise<PrismaSpot> {
    return this.prisma.spot.update(args);
  }
  async deleteSpot(args: Prisma.SpotDeleteArgs): Promise<PrismaSpot> {
    return this.prisma.spot.delete(args);
  }
}
